//AutoGenerated - 2025/6/26 11:11:49

using FishNet.Serializing;
using Unity.Collections;
using Unity.Entities;

namespace KillCam
{
    public partial class C_HandleNetworkMsgSystem {
        private void PoolNetworkEvents()
        {
            cmd = new EntityCommandBuffer(Allocator.Temp);
            while (dataQueue.Count > 0)
            {
                var reader = new Reader(dataQueue.Dequeue().Data, manager);
                var tick = manager.TimeManager.Tick;
                var msgType = (NetMsg)reader.ReadUInt32();
                switch (msgType)
                {
						case NetMsg.S2C_NetSpawnPlayer:
							var S2C_NetSpawnPlayer = new S2C_NetSpawnPlayer();
							S2C_NetSpawnPlayer.Deserialize(reader);
							var S2C_NetSpawnPlayer_Ent = cmd.CreateEntity();
							cmd.AddComponent(S2C_NetSpawnPlayer_Ent, S2C_NetSpawnPlayer );
							cmd.AddComponent(S2C_NetSpawnPlayer_Ent, new NetMsgTag());
							break;
						case NetMsg.S2C_Tick:
							var S2C_Tick = new S2C_Tick();
							S2C_Tick.Deserialize(reader);
							var netTickState = SystemAPI.GetSingletonRW<NetTickState>();
							netTickState.ValueRW.Remote = S2C_Tick.ServerTick;
							break;
                    
                }
            }

            cmd.Playback(EntityManager);
            cmd.Dispose();
        }
    }
}